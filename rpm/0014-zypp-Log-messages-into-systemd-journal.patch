From 12055a57263f8d6d80f4678b65b97763b3e20d40 Mon Sep 17 00:00:00 2001
From: Thomas Perl <thomas.perl@jollamobile.com>
Date: Wed, 2 Oct 2013 14:37:44 +0200
Subject: [PATCH 14/65] zypp: Log messages into systemd journal

---
 backends/zypp/Makefile.am         |  2 +-
 backends/zypp/pk-backend-zypp.cpp | 68 +++++++++++++++++++++------------------
 2 files changed, 38 insertions(+), 32 deletions(-)

diff --git a/backends/zypp/Makefile.am b/backends/zypp/Makefile.am
index cc683e5f1..a18c09021 100644
--- a/backends/zypp/Makefile.am
+++ b/backends/zypp/Makefile.am
@@ -6,7 +6,7 @@ plugindir = $(PK_PLUGIN_DIR)
 plugin_LTLIBRARIES = libpk_backend_zypp.la
 libpk_backend_zypp_la_SOURCES =	pk-backend-zypp.cpp
 libpk_backend_zypp_la_LIBADD = $(PK_PLUGIN_LIBS)
-libpk_backend_zypp_la_LDFLAGS = -module -avoid-version $(ZYPP_LIBS)
+libpk_backend_zypp_la_LDFLAGS = -module -avoid-version $(ZYPP_LIBS) -lsystemd
 libpk_backend_zypp_la_CFLAGS = $(PK_PLUGIN_CFLAGS) $(WARNINGFLAGS_CPP)
 libpk_backend_zypp_la_CXXFLAGS = $(PK_PLUGIN_CXXFLAGS) --std=c++0x -Wall -Woverloaded-virtual -Wnon-virtual-dtor
 libpk_backend_zypp_la_CPPFLAGS = $(PK_PLUGIN_CFLAGS) $(ZYPP_CFLAGS) -Wno-deprecated
diff --git a/backends/zypp/pk-backend-zypp.cpp b/backends/zypp/pk-backend-zypp.cpp
index 14bb72845..eb233bba9 100644
--- a/backends/zypp/pk-backend-zypp.cpp
+++ b/backends/zypp/pk-backend-zypp.cpp
@@ -40,6 +40,8 @@
 #include <unistd.h>
 #include <vector>
 
+#include <systemd/sd-journal.h>
+
 #include <glib.h>
 #include <glib/gi18n.h>
 #include <glib/gstdio.h>
@@ -207,6 +209,40 @@ void zypp_backend_download_finished(PkBackendJob *job);
 void zypp_backend_installation_finished(PkBackendJob *job);
 void zypp_backend_removal_finished(PkBackendJob *job);
 
+
+/* Logging to systemd journal */
+class SystemdLogWriter : public zypp::log::LineWriter {
+public:
+	SystemdLogWriter()
+		: zypp::log::LineWriter()
+		  , m_writer(this)
+	{
+	}
+
+	virtual ~SystemdLogWriter()
+	{
+	}
+
+	virtual void writeOut(const std::string &message)
+	{
+		if (sd_journal_print(LOG_INFO, "pk-backend-zypp: %s", message.c_str()) < 0) {
+			/* Fallback: If systemd journal writing fails, write to logfile */
+			FILE *fp = fopen("/var/log/pk_backend_zypp", "at");
+			if (fp != NULL) {
+				fprintf(fp, "%s\n", message.c_str());
+				fclose(fp);
+			} else {
+				/* If we can't even open the log file, write to stderr */
+				fprintf(stderr, "%s\n", message.c_str());
+			}
+		}
+	}
+
+private:
+	zypp::base::LogControl::TmpLineWriter m_writer;
+};
+
+
 class ZyppBackendReceiver
 {
 public:
@@ -615,6 +651,7 @@ class PkBackendZYppPrivate {
 	std::vector<std::string> signatures;
 	EventDirector eventDirector;
 	PkBackendJob *currentJob;
+	SystemdLogWriter logWriter;
 	
 	pthread_mutex_t zypp_mutex;
 	ExecCounters exec;
@@ -698,36 +735,6 @@ ZyppJob::get_zypp()
 }
 
 
-
-
-/**
-  * Enable and rotate zypp logging
-  */
-gboolean
-zypp_logging ()
-{
-	gchar *file = g_strdup ("/var/log/pk_backend_zypp");
-	gchar *file_old = g_strdup ("/var/log/pk_backend_zypp-1");
-
-	if (g_file_test (file, G_FILE_TEST_EXISTS)) {
-		struct stat buffer;
-		g_stat (file, &buffer);
-		// if the file is bigger than 10 MB rotate
-		if ((guint)buffer.st_size > 10485760) {
-			if (g_file_test (file_old, G_FILE_TEST_EXISTS))
-				g_remove (file_old);
-			g_rename (file, file_old);
-		}
-	}
-
-	base::LogControl::instance ().logfile(file);
-
-	g_free (file);
-	g_free (file_old);
-
-	return TRUE;
-}
-
 gboolean
 zypp_is_changeable_media (const Url &url)
 {
@@ -1854,7 +1861,6 @@ pk_backend_initialize (PkBackend *backend)
 	priv->currentJob = 0;
 	priv->zypp_mutex = PTHREAD_MUTEX_INITIALIZER;
 	priv->exec = ExecCounters();
-	zypp_logging ();
 
 	g_debug ("zypp_backend_initialize");
 	//_updating_self = FALSE;
-- 
2.13.5

