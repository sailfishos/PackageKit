From a47c3800f86b871ec01f05fd019b0c808c166b8b Mon Sep 17 00:00:00 2001
From: Thomas Perl <thomas.perl@jollamobile.com>
Date: Mon, 28 Oct 2013 12:19:48 +0100
Subject: [PATCH 20/40] zypp: Detect RPM database corruption for
 initializeTarget

---
 backends/zypp/pk-backend-zypp.cpp | 54 ++++++++++++++++++++++++++++++++++-----
 1 file changed, 48 insertions(+), 6 deletions(-)

diff --git a/backends/zypp/pk-backend-zypp.cpp b/backends/zypp/pk-backend-zypp.cpp
index a05ebe818..716199b49 100644
--- a/backends/zypp/pk-backend-zypp.cpp
+++ b/backends/zypp/pk-backend-zypp.cpp
@@ -765,6 +765,32 @@ ZyppJob::~ZyppJob()
 	pthread_mutex_unlock(&priv->zypp_mutex);
 }
 
+static bool
+zypp_handle_broken_rpmdb (ZYpp::Ptr zypp, const Exception &e)
+{
+	PK_ZYPP_LOG("Exception while initializing target (RPM DB broken?): %s", e.asUserString().c_str());
+
+	if (system("/usr/bin/db_recover -h /var/lib/rpm") == EXIT_SUCCESS) {
+		PK_ZYPP_LOG("RPM DB recovery successful.");
+
+		try {
+			filesystem::Pathname pathname("/");
+			zypp->initializeTarget (pathname);
+			return true;
+		}
+		catch(const Exception &e) {
+			PK_ZYPP_LOG("RPM DB reinitialization failed.");
+			return false;
+		}
+	}
+	else {
+		PK_ZYPP_LOG("RPM DB recovery failed.");
+		// TODO should we fork and do rm -f /var/lib/rpm/__db*; rpm --rebuilddb here?
+		return false;
+
+	}
+}
+
 /**
  * Initialize Zypp (Factory method)
  */
@@ -780,8 +806,16 @@ ZyppJob::get_zypp()
 		/* TODO: we need to lifecycle manage this, detect changes
 		   in the requested 'root' etc. */
 		if (!initialized) {
-			filesystem::Pathname pathname("/");
-			zypp->initializeTarget (pathname);
+			try {
+				filesystem::Pathname pathname("/");
+				zypp->initializeTarget (pathname);
+			} catch (const Exception &e) {
+				// Try to recover from a broken RPM database
+				if (!zypp_handle_broken_rpmdb(zypp, e)) {
+					// Rethrow, so we report an internal error below
+					throw;
+				}
+			}
 
 			initialized = TRUE;
 		}
@@ -1809,10 +1843,18 @@ zypp_refresh_cache (PkBackendJob *job, ZYpp::Ptr zypp, gboolean force)
 
 	if (zypp == NULL)
 		return  FALSE;
-	filesystem::Pathname pathname("/");
-	// This call is needed to refresh system rpmdb status while refresh cache
-	zypp->finishTarget ();
-	zypp->initializeTarget (pathname);
+	try {
+		// This call is needed to refresh system rpmdb status while refresh cache
+		zypp->finishTarget ();
+		filesystem::Pathname pathname("/");
+		zypp->initializeTarget (pathname);
+	} catch (const Exception &e) {
+		// Try to recover from a broken RPM database
+		if (!zypp_handle_broken_rpmdb(zypp, e)) {
+			pk_backend_job_error_code (job, PK_ERROR_ENUM_INTERNAL_ERROR, e.asUserString().c_str() );
+			return FALSE;
+		}
+	}
 
 	pk_backend_job_set_status (job, PK_STATUS_ENUM_REFRESH_CACHE);
 	pk_backend_job_set_percentage (job, 0);
-- 
2.13.6

