From 811575949e70575847cba27ef32d9d866dd261ec Mon Sep 17 00:00:00 2001
From: Thomas Perl <thomas.perl@jollamobile.com>
Date: Tue, 13 Aug 2013 15:43:15 +0200
Subject: [PATCH 06/65] Do not consider satisfied patterns "installed"

Patterns can not be "installed" as such - they can only be satisfied
if all their dependencies are installed / satisfied.

Installing a pattern means trying to satisfy its dependencies.

Change the logic by which packages are filtered, so that patterns are
never considered "installed", even if their dependencies are satisfied.
This way, re-installing a pattern becomes possible, and will make sure
all current dependencies are satisfied.

The drawback of this is that now we can't use PackageKit to check if
a pattern is satisfied or not. Fixing this would require modifying the
code in zypp_emit_filtered_packages_in_list(). The comment there says
that emitting the same version of a package as INSTALLED and AVAILABLE
is not possible due to a PackageKit quirk.

For normal packages, this won't be a problem, as the installed package
will have some old version and a possible available update for that
package will have a different version. For patterns, however, even
though they are versioned, the pattern version at which the pattern was
installed isn't recorded(?), so we cannot emit the old pattern version
as INSTALLED and also emit the new pattern version as AVAILABLE.

Add some logging of filters in backend_get_packages_thread() to aid in
debugging similar filter-related issues in the future.

[backends] zypp: Do not consider satisfied patterns "installed"
---
 backends/zypp/pk-backend-zypp.cpp | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/backends/zypp/pk-backend-zypp.cpp b/backends/zypp/pk-backend-zypp.cpp
index 9b8771ba8..6cb462416 100644
--- a/backends/zypp/pk-backend-zypp.cpp
+++ b/backends/zypp/pk-backend-zypp.cpp
@@ -1107,10 +1107,10 @@ zypp_filter_solvable (PkBitfield filters, const sat::Solvable &item)
 	for (guint i = 0; i < PK_FILTER_ENUM_LAST; i++) {
 		if ((filters & pk_bitfield_value (i)) == 0)
 			continue;
-		if (i == PK_FILTER_ENUM_INSTALLED && !(item.isSystem () || zypp_satisfied_pattern(item))){
+		if (i == PK_FILTER_ENUM_INSTALLED && !(item.isSystem ())) {
 			return TRUE;
 		}
-		if (i == PK_FILTER_ENUM_NOT_INSTALLED && (item.isSystem () || zypp_satisfied_pattern(item))){
+		if (i == PK_FILTER_ENUM_NOT_INSTALLED && (item.isSystem ())) {
 			return TRUE;
 		}
 		if (i == PK_FILTER_ENUM_ARCH) {
@@ -1168,7 +1168,7 @@ zypp_emit_filtered_packages_in_list (PkBackendJob *job, PkBitfield filters, cons
 
 	// always emit system installed packages first
 	for (sat_it_t it = v.begin (); it != v.end (); ++it) {
-		if (!(it->isSystem() || zypp_satisfied_pattern(*it)) ||
+		if (!(it->isSystem()) ||
 		    zypp_filter_solvable (filters, *it)) {
 			continue;
 		}
@@ -1815,7 +1815,7 @@ backend_get_requires_thread (PkBackendJob *job, GVariant *params, gpointer user_
 
 		// get-requires only works for installed packages. It's meaningless for stuff in the repo
 		// same with yum backend
-		if (!(solvable.isSystem () || zypp_satisfied_pattern(solvable))) { 
+		if (!(solvable.isSystem ())) {
 			continue;
 		}
 		// set Package as to be uninstalled
@@ -3169,12 +3169,12 @@ pk_backend_get_files(PkBackend *backend, PkBackendJob *job, gchar **package_ids)
 static void
 backend_get_packages_thread (PkBackendJob *job, GVariant *params, gpointer user_data)
 {
-	MIL << endl;
-
 	PkBitfield _filters;
 	g_variant_get (params, "(t)",
 		       &_filters);
 
+	MIL << pk_filter_bitfield_to_string(_filters) << endl;
+
 	ZyppJob zjob(job);
 	ZYpp::Ptr zypp = zjob.get_zypp();
 
-- 
2.13.5

