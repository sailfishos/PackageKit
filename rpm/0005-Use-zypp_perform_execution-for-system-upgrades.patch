From 36185793f49330060382013c44a3829aff7673bc Mon Sep 17 00:00:00 2001
From: Thomas Perl <thomas.perl@jollamobile.com>
Date: Tue, 13 Aug 2013 14:02:06 +0200
Subject: [PATCH 05/65] Use zypp_perform_execution for system upgrades

Simplify backend_upgrade_system_thread by re-using
zypp_perform_execution and adding a new execution type UPGRADE. This
adds transaction features such as download-only mode and simulation
to the upgrade-system command, and enhances error reporting in case
of resolver issues (existing implementation zypp_perform_execution).

[backends] zypp: Use zypp_perform_execution for system upgrades
---
 backends/zypp/pk-backend-zypp.cpp | 42 +++++++++++++++------------------------
 1 file changed, 16 insertions(+), 26 deletions(-)

diff --git a/backends/zypp/pk-backend-zypp.cpp b/backends/zypp/pk-backend-zypp.cpp
index d5ab8e3bc..9b8771ba8 100644
--- a/backends/zypp/pk-backend-zypp.cpp
+++ b/backends/zypp/pk-backend-zypp.cpp
@@ -102,7 +102,8 @@ using zypp::filesystem::PathInfo;
 typedef enum {
         INSTALL,
         REMOVE,
-        UPDATE
+        UPDATE,
+        UPGRADE,
 } PerformType;
 
 
@@ -1405,7 +1406,15 @@ zypp_perform_execution (PkBackendJob *job, ZYpp::Ptr zypp, PerformType type, gbo
 		// Gather up any dependencies
 		pk_backend_job_set_status (job, PK_STATUS_ENUM_DEP_RESOLVE);
 		zypp->resolver ()->setIgnoreAlreadyRecommended (TRUE);
-		if (!zypp->resolver ()->resolvePool ()) {
+		bool resolveResult = false;
+		if (type == UPGRADE) {
+			// Modeled after dist_upgrade() in Zypper's src/solve-commit.cc
+			zypp->resolver()->setOnlyRequires(false);
+			resolveResult = zypp->resolver()->doUpgrade();
+		} else {
+			resolveResult = zypp->resolver()->resolvePool();
+		}
+		if (!resolveResult) {
 			// Manual intervention required to resolve dependencies
 			// TODO: Figure out what we need to do with PackageKit
 			// to pull off interactive problem solving.
@@ -1445,6 +1454,7 @@ zypp_perform_execution (PkBackendJob *job, ZYpp::Ptr zypp, PerformType type, gbo
 			pk_backend_job_set_status (job, PK_STATUS_ENUM_REMOVE);
 			break;
 		case UPDATE:
+		case UPGRADE:
 			pk_backend_job_set_status (job, PK_STATUS_ENUM_UPDATE);
 			break;
 		}
@@ -1469,6 +1479,9 @@ zypp_perform_execution (PkBackendJob *job, ZYpp::Ptr zypp, PerformType type, gbo
 					if (it->status ().isToBeUninstalledDueToUpgrade ())
 						continue;
 					break;
+				case UPGRADE:
+					// for dist upgrades, we want to see everything
+					break;
 				}
 				
 				if (!zypp_backend_pool_item_notify (job, *it, TRUE))
@@ -3701,11 +3714,6 @@ backend_upgrade_system_thread (PkBackendJob *job, GVariant *params, gpointer use
 
 	try
 	{
-		// Modeled after dist_upgrade() in Zypper's src/solve-commit.cc
-		zypp->resolver()->setForceResolve(true);
-		zypp->resolver()->setOnlyRequires(false);
-		zypp->resolver()->setIgnoreAlreadyRecommended(true);
-
 		pk_backend_job_set_status (job, PK_STATUS_ENUM_REFRESH_CACHE);
 		if (!zypp_refresh_cache (job, zypp, FALSE)) {
 			zypp_backend_finished_error (job,
@@ -3717,25 +3725,7 @@ backend_upgrade_system_thread (PkBackendJob *job, GVariant *params, gpointer use
 		// Must be called after zypp_refresh_cache to see locally-installed files
 		ResPool pool = zypp_build_pool (zypp, TRUE);
 
-		pk_backend_job_set_status (job, PK_STATUS_ENUM_DEP_RESOLVE);
-		if (!zypp->resolver()->doUpgrade()) {
-			zypp_backend_finished_error (job,
-					PK_ERROR_ENUM_INTERNAL_ERROR,
-					"Cannot calculate dist-upgrade.");
-			return;
-		}
-
-		ZYppCommitPolicy policy;
-		policy.restrictToMedia (0); // 0 == install all packages regardless to media
-		policy.downloadMode (DownloadInHeaps);
-		policy.syncPoolAfterCommit (true);
-
-		ZYppCommitResult result = zypp->commit (policy);
-
-		if (!result.allDone()) {
-			zypp_backend_finished_error (job,
-					PK_ERROR_ENUM_LOCAL_INSTALL_FAILED,
-					"Could not perform dist-upgrade.");
+		if (!zypp_perform_execution (job, zypp, UPGRADE, TRUE, transaction_flags)) {
 			return;
 		}
 	} catch (const Exception &ex) {
-- 
2.13.5

