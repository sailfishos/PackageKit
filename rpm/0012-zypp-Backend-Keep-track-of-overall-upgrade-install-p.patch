From 75ebf4c09cd988d3d250f0228cd09088f2e1c676 Mon Sep 17 00:00:00 2001
From: Pekka Vuorela <pekka.vuorela@jollamobile.com>
Date: Fri, 13 Oct 2017 15:03:49 +0300
Subject: [PATCH 12/38] zypp Backend: Keep track of overall upgrade/install
 progress

Count packages to be installed / removed before committing a
zypp transaction, so that we can update the overall upgrade
progress whenever a package installation / removal is finished.

FIXME: progress should be merged with _dl_progress that has appeared
on upstream since the patch was created

[backends] zypp: Report overall upgrade progress
---
 backends/zypp/pk-backend-zypp.cpp | 83 ++++++++++++++++++++++++++++++++++++++-
 1 file changed, 81 insertions(+), 2 deletions(-)

diff --git a/backends/zypp/pk-backend-zypp.cpp b/backends/zypp/pk-backend-zypp.cpp
index df0f068d5..c5dc6df38 100644
--- a/backends/zypp/pk-backend-zypp.cpp
+++ b/backends/zypp/pk-backend-zypp.cpp
@@ -209,6 +209,11 @@ namespace ZyppBackend
 class PkBackendZYppPrivate;
 static PkBackendZYppPrivate *priv = 0;
 
+// FIXME: should merge with _dl_progress / _dl_count
+/* Overall progress update helpers */
+void zypp_backend_installation_finished(PkBackendJob *job);
+void zypp_backend_removal_finished(PkBackendJob *job);
+
 class ZyppBackendReceiver
 {
 public:
@@ -306,8 +311,10 @@ struct InstallResolvableReportReceiver : public zypp::callback::ReceiveReport<zy
 
 	virtual void finish (zypp::Resolvable::constPtr resolvable, Error error, const std::string &reason, RpmLevel level) {
 		MIL << reason << " " << _package_id << " " << resolvable << std::endl;
-		pk_backend_job_set_percentage(_job, (double)++_dl_progress / _dl_count * 100);
+		// FIXME: uncomment when ExecCounter and _dl_progress are unified
+		//pk_backend_job_set_percentage(_job, (double)++_dl_progress / _dl_count * 100);
 		if (_package_id != NULL) {
+			zypp_backend_installation_finished(_job);
 			//pk_backend_job_package (_backend, PK_INFO_ENUM_INSTALLED, _package_id, "TODO: Put the package summary here if possible");
 			update_sub_percentage (100, PK_STATUS_ENUM_INSTALL);
 			clear_package_id ();
@@ -341,6 +348,7 @@ struct RemoveResolvableReportReceiver : public zypp::callback::ReceiveReport<zyp
 
 	virtual void finish (zypp::Resolvable::constPtr resolvable, Error error, const std::string &reason) {
 		if (_package_id != NULL) {
+			zypp_backend_removal_finished(_job);
 			pk_backend_job_package (_job, PK_INFO_ENUM_FINISHED, _package_id, "");
 			clear_package_id ();
 		}
@@ -425,7 +433,8 @@ struct DownloadProgressReportReceiver : public zypp::callback::ReceiveReport<zyp
 	{
 		MIL << resolvable << " " << error << " " << _package_id << std::endl;
 		update_sub_percentage (100, PK_STATUS_ENUM_DOWNLOAD);
-		pk_backend_job_set_percentage(_job, (double)++_dl_progress / _dl_count * 100);
+		// FIXME: uncomment when ExecCounter and _dl_progress are unified
+		//pk_backend_job_set_percentage(_job, (double)++_dl_progress / _dl_count * 100);
 		clear_package_id ();
 	}
 };
@@ -566,6 +575,43 @@ class EventDirector
 		}
 };
 
+struct ExecCounters {
+	ExecCounters()
+		: total_installs(0)
+		, current_installs(0)
+		, total_removals(0)
+		, current_removals(0)
+	{
+	}
+
+	void update(PkBackendJob *job)
+	{
+		int total = (total_installs + total_removals);
+		int current = (current_installs + current_removals);
+
+		if (current > total) {
+			MIL << "current > total!" << std::endl;
+			current = total;
+		}
+
+		MIL << "Overall progress update: " << current << " of " << total << std::endl;
+		pk_backend_job_set_percentage (job, 100 * current / total);
+	}
+
+	void reset()
+	{
+		total_installs = 0;
+		current_installs = 0;
+		total_removals = 0;
+		current_removals = 0;
+	}
+
+	int total_installs;
+	int current_installs;
+	int total_removals;
+	int current_removals;
+};
+
 class PkBackendZYppPrivate {
  public:
 	std::vector<std::string> signatures;
@@ -573,8 +619,21 @@ class PkBackendZYppPrivate {
 	PkBackendJob *currentJob;
 	
 	pthread_mutex_t zypp_mutex;
+	ExecCounters exec;
 };
 
+void zypp_backend_installation_finished(PkBackendJob *job)
+{
+	priv->exec.current_installs += 1;
+	priv->exec.update(job);
+}
+
+void zypp_backend_removal_finished(PkBackendJob *job)
+{
+	priv->exec.current_removals += 1;
+	priv->exec.update(job);
+}
+
 }; // namespace ZyppBackend
 
 using namespace ZyppBackend;
@@ -1564,6 +1623,25 @@ zypp_perform_execution (PkBackendJob *job, ZYpp::Ptr zypp, PerformType type, gbo
 		if (!pk_bitfield_contain (transaction_flags, PK_TRANSACTION_FLAG_ENUM_ONLY_TRUSTED))
 			policy.rpmNoSignature(true);
 
+		// Get number of installations and removals for overall progress
+		priv->exec.reset();
+		for (ResPool::const_iterator it = pool.begin (); it != pool.end (); ++it) {
+			// Patterns are not "installed" or "downloaded" as such
+			if (it->satSolvable().kind() == ResKind::pattern) {
+				continue;
+			}
+
+			if (it->status().isToBeInstalled()) {
+				priv->exec.total_installs += 1;
+			} else if (it->status().isToBeUninstalled() &&
+					!it->status().isToBeUninstalledDueToUpgrade()) {
+				priv->exec.total_removals += 1;
+			}
+		}
+		MIL << "Summary before commit: " << std::endl;
+		MIL << " total installs = " << priv->exec.total_installs << std::endl;
+		MIL << " total removals = " << priv->exec.total_removals << std::endl;
+
 		ZYppCommitResult result = zypp->commit (policy);
 
 		bool worked = result.allDone();
@@ -1782,6 +1860,7 @@ pk_backend_initialize (GKeyFile *conf, PkBackend *backend)
 	priv = new PkBackendZYppPrivate;
 	priv->currentJob = 0;
 	priv->zypp_mutex = PTHREAD_MUTEX_INITIALIZER;
+	priv->exec = ExecCounters();
 	zypp_logging ();
 
 	g_debug ("zypp_backend_initialize");
-- 
2.13.6

